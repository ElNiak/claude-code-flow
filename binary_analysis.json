{
	"binary_analysis_report": {
		"generated_date": "2025-07-13T06:14:00.000Z",
		"analysis_scope": "All binary executables in claude-flow repository",
		"total_binaries": 9,
		"coordinator": "Executable Inventory Specialist Team"
	},
	"detailed_binary_analysis": {
		"main_entry_point": {
			"file": "bin/claude-flow",
			"analysis": {
				"type": "POSIX shell script",
				"size": "2.4KB",
				"complexity": "medium",
				"purpose": "Smart dispatcher - detects runtime and routes to appropriate implementation",
				"architecture": "Runtime-agnostic entry point",
				"key_features": [
					"Symlink detection for npm global installs",
					"Fallback path resolution",
					"Version handling (2.0.0-alpha.48)",
					"Help command passthrough",
					"Cross-platform compatibility"
				],
				"execution_flow": [
					"Detect script invocation method (symlink vs direct)",
					"Resolve correct file paths",
					"Handle global vs local npm installations",
					"Set default help if no args",
					"Pass through to actual CLI implementation"
				],
				"dependencies": ["Node.js", "npm"],
				"platform_compatibility": "Universal (Linux/macOS/Windows)",
				"security_considerations": "Uses readlink and dirname - safe path operations"
			}
		},
		"swarm_binaries": {
			"claude-flow-swarm": {
				"type": "Bash shell script",
				"size": "1.1KB",
				"purpose": "Deno-based swarm coordination wrapper",
				"key_features": [
					"Deno runtime detection",
					"Multiple swarm implementation paths",
					"Error handling for missing dependencies"
				],
				"dependencies": ["Deno runtime"],
				"execution_targets": [
					"../swarm-demo.ts (development)",
					"../src/cli/swarm-standalone.js (production)"
				]
			},
			"claude-flow-swarm-bg": {
				"type": "Bash shell script",
				"size": "1.6KB",
				"purpose": "Background swarm process launcher",
				"complexity": "medium"
			},
			"claude-flow-swarm-monitor": {
				"type": "Bash shell script",
				"size": "589 bytes",
				"purpose": "Swarm monitoring interface",
				"complexity": "low"
			},
			"claude-flow-swarm-ui": {
				"type": "Bash shell script",
				"size": "1.2KB",
				"purpose": "Web UI launcher for swarm coordination",
				"complexity": "low"
			}
		},
		"packaged_binary": {
			"claude-flow-node-pkg": {
				"type": "ELF 64-bit executable",
				"size": "46.3MB",
				"architecture": "x86-64",
				"target_platform": "GNU/Linux 2.6.32+",
				"analysis": {
					"purpose": "Self-contained Linux binary with embedded Node.js runtime",
					"build_tool": "pkg (Node.js packager)",
					"contents": "Complete Node.js runtime + claude-flow application",
					"advantages": [
						"No Node.js installation required",
						"Single binary deployment",
						"Consistent runtime environment"
					],
					"disadvantages": [
						"Large file size (46MB)",
						"Platform-specific (Linux x86-64 only)",
						"Potential security implications of embedded runtime"
					],
					"use_cases": [
						"Containerized deployments",
						"Systems without Node.js",
						"Air-gapped environments"
					]
				},
				"security_analysis": {
					"binary_type": "Dynamically linked",
					"interpreter": "/lib64/ld-linux-x86-64.so.2",
					"build_id": "e8e9fc449943f935d469333b1101f224a4c0164f",
					"stripped": true,
					"potential_concerns": [
						"Embedded Node.js version may become outdated",
						"Large attack surface due to full runtime",
						"Difficult to patch without rebuilding"
					]
				}
			}
		},
		"node_wrappers": {
			"claude-flow-pkg.js": {
				"type": "Node.js script",
				"size": "355 bytes",
				"purpose": "TypeScript compilation wrapper for pkg binary creation",
				"shebang": "#!/usr/bin/env node",
				"functionality": [
					"Wraps tsx execution of simple-cli.ts",
					"Forwards all command-line arguments",
					"Provides stdio inheritance for interactive use"
				],
				"build_chain": "claude-flow-pkg.js → tsx → simple-cli.ts → main.ts"
			},
			"claude-flow-dev": {
				"type": "Bash shell script",
				"size": "453 bytes",
				"purpose": "Development mode launcher",
				"use_case": "Local development and testing"
			}
		},
		"background_processes": {
			"claude-flow-swarm-background": {
				"type": "Script file",
				"size": "2.3KB",
				"encoding": "UTF-8",
				"purpose": "Background swarm process management",
				"complexity": "medium"
			}
		}
	},
	"binary_relationships": {
		"entry_point_hierarchy": {
			"primary": "bin/claude-flow",
			"specialized": [
				"bin/claude-flow-swarm (swarm coordination)",
				"bin/claude-flow-dev (development)",
				"bin/claude-flow-pkg.js (compilation)"
			],
			"deployment": ["bin/claude-flow-node-pkg (Linux production)"]
		},
		"execution_chains": [
			{
				"name": "Standard CLI Flow",
				"chain": "claude-flow → simple-cli.js → main.ts → orchestrator"
			},
			{
				"name": "Swarm Coordination Flow",
				"chain": "claude-flow-swarm → Deno → swarm-demo.ts"
			},
			{
				"name": "Package Build Flow",
				"chain": "claude-flow-pkg.js → tsx → simple-cli.ts"
			}
		]
	},
	"platform_analysis": {
		"cross_platform_binaries": [
			"claude-flow (shell script - universal)",
			"claude-flow-pkg.js (Node.js - universal)"
		],
		"unix_specific": [
			"claude-flow-swarm (requires Bash)",
			"claude-flow-dev (Bash)",
			"All swarm-* scripts (Bash)"
		],
		"linux_specific": ["claude-flow-node-pkg (ELF x86-64)"]
	},
	"build_requirements": {
		"development": [
			"Node.js 18+",
			"npm/yarn",
			"TypeScript",
			"tsx/ts-node",
			"Deno (for swarm features)"
		],
		"deployment": [
			"pkg (for binary packaging)",
			"Docker (for containerization)"
		]
	},
	"recommendations": {
		"security": [
			"Regular updates of embedded Node.js in pkg binary",
			"Security scanning of packaged binary",
			"Validation of shell script inputs"
		],
		"maintenance": [
			"Monitor binary sizes (claude-flow-node-pkg is very large)",
			"Consider splitting swarm binaries for modularity",
			"Standardize on consistent shell script patterns"
		],
		"deployment": [
			"Provide platform-specific binaries for other architectures",
			"Consider WebAssembly packaging for true cross-platform deployment",
			"Implement binary signing for production releases"
		]
	}
}
