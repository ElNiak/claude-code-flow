{
	"name": "claude-flow",
	"version": "2.0.0-alpha.50",
	"description": "Advanced AI agent coordination platform with intelligent task distribution and persistent memory (Alpha Release)",
	"main": "dist/cli/cli.js",
	"bin": {
		"claude-flow": "./bin/claude-flow"
	},
	"scripts": {
		"dev": "tsx src/cli/cli.ts",
		"dev:tsx": "tsx src/cli/cli.ts",
		"dev:optimized": "./src/cli/commands/init/scripts/memory-optimized-start.sh tsx src/cli/main.ts",
		"start": "./start-optimized.sh dist/cli/cli.js",
		"start:optimized": "./start-optimized.sh dist/cli/cli.js",
		"start:dev": "./start-optimized.sh src/cli/cli.js",
		"mcp": "node dist/mcp/server.js",
		"mcp:start": "node src/mcp/stdio-server-complete.js",
		"mcp:stdio": "node src/mcp/stdio-server-complete.js",
		"mcp:test": "echo '{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2024-11-05\",\"capabilities\":{\"tools\":{},\"resources\":{}},\"clientInfo\":{\"name\":\"test-client\",\"version\":\"1.0.0\"}}}' | node src/mcp/stdio-server-complete.js",
		"build": "npm run ensure-deps && npm run clean && npm run update-version && npm run build:tsx",
		"build:tsx": "npm run clean && npx tsc",
		"ensure-deps": "node src/cli/commands/build/utils/ensure-dev-deps.js",
		"prebuild": "npm run ensure-deps",
		"build:legacy": "npm run clean && npm run update-version && npm run build:esm && npm run build:cjs && npm run build:binary",
		"update-version": "node src/cli/commands/build/utils/update-bin-version.js",
		"clean": "rm -rf dist dist-cjs",
		"build:esm": "npx tsc",
		"build:cjs": "npx tsc -p tsconfig.cjs.json",
		"build:ts": "npm run build:esm && npm run build:cjs",
		"build:binary": "pkg dist/cli/main.js --targets node20-linux-x64,node20-macos-x64,node20-win-x64 --output bin/claude-flow",
		"build:simple": "npm run build:ts && pkg dist/cli/cli.js --output bin/claude-flow-simple",
		"typecheck": "npx tsc --noEmit",
		"typecheck:watch": "npx tsc --noEmit --watch",
		"dev:build": "npx tsc --watch",
		"test": "NODE_OPTIONS='--experimental-vm-modules' jest",
		"test:watch": "NODE_OPTIONS='--experimental-vm-modules' jest --watch",
		"test:unit": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/**/__tests__/unit tests/unit",
		"test:integration": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/**/__tests__/integration tests/integration",
		"test:e2e": "NODE_OPTIONS='--experimental-vm-modules' jest tests/e2e",
		"test:performance": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/**/__tests__/performance tests/performance",
		"test:cli": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/**/__tests__",
		"test:commands": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/**/__tests__",
		"test:commands:hive-mind": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/hive-mind/__tests__",
		"test:commands:init": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/init/__tests__",
		"test:commands:mcp": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/mcp/__tests__",
		"test:commands:hooks": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/hooks/__tests__",
		"test:commands:memory": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/memory/__tests__",
		"test:commands:config": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/config/__tests__",
		"test:commands:agent": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/agent/__tests__",
		"test:commands:monitor": "NODE_OPTIONS='--experimental-vm-modules' jest src/cli/commands/monitor/__tests__",
		"test:coverage": "NODE_OPTIONS='--experimental-vm-modules' jest --coverage",
		"test:coverage:unit": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/unit --coverage",
		"test:coverage:integration": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/integration --coverage",
		"test:coverage:e2e": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/e2e --coverage",
		"test:ci": "NODE_OPTIONS='--experimental-vm-modules' jest --ci --coverage --maxWorkers=2",
		"test:debug": "NODE_OPTIONS='--experimental-vm-modules --inspect-brk' jest --runInBand --no-cache",
		"test:comprehensive": "node src/cli/commands/automation/testing/test-comprehensive.js",
		"test:comprehensive:verbose": "node src/cli/commands/automation/testing/test-comprehensive.js --verbose",
		"test:comprehensive:full": "node src/cli/commands/automation/testing/test-comprehensive.js --load --docker --npx",
		"test:load": "node src/cli/commands/automation/testing/test-comprehensive.js --load",
		"test:docker": "node src/cli/commands/automation/testing/test-comprehensive.js --docker",
		"test:npx": "node src/cli/commands/automation/testing/test-comprehensive.js --npx",
		"test:health": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/integration/system-integration.test.ts --testNamePattern='Health'",
		"test:hallucination": "npx ts-node tests/hallucination-prevention/run-hallucination-tests.ts",
		"test:hallucination:unit": "NODE_OPTIONS='--experimental-vm-modules' jest tests/hallucination-prevention/unit --coverage",
		"test:hallucination:integration": "NODE_OPTIONS='--experimental-vm-modules' jest tests/hallucination-prevention/integration --coverage",
		"test:hallucination:performance": "NODE_OPTIONS='--experimental-vm-modules' jest tests/hallucination-prevention/performance",
		"test:hallucination:validation": "NODE_OPTIONS='--experimental-vm-modules' jest tests/hallucination-prevention/validation --coverage",
		"test:hallucination:watch": "NODE_OPTIONS='--experimental-vm-modules' jest tests/hallucination-prevention --watch",
		"test:hallucination:debug": "NODE_OPTIONS='--experimental-vm-modules --inspect-brk' jest tests/hallucination-prevention --runInBand --no-cache",
		"test:hallucination:coverage": "NODE_OPTIONS='--experimental-vm-modules' jest tests/hallucination-prevention --coverage --coverageReporters=html,lcov,text",
		"test:swarm": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/e2e/swarm-coordination.test.ts",
		"test:benchmark": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/performance/benchmark.test.ts",
		"test:unified": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/e2e/unified-coordination.test.ts",
		"test:intrinsic": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/unit/intrinsic-agents.test.ts",
		"test:compatibility": "NODE_OPTIONS='--experimental-vm-modules' jest src/__tests__/integration/backward-compatibility.test.ts",
		"lint": "eslint src --ext .ts,.js",
		"format": "prettier --write src",
		"diagnostics": "node -e \"import('./dist/cli/commands/monitor/diagnostics.js').then(m => m.DiagnosticManager.quickDiagnostic().then(console.log))\"",
		"health-check": "node -e \"import('./dist/cli/commands/monitor/health-check.js').then(m => new m.HealthCheckManager().performHealthCheck().then(console.log))\"",
		"postinstall": "NODE_ENV=development node src/cli/commands/init/scripts/install.js",
		"prepublishOnly": "npm run update-version",
		"publish:alpha": "npm publish --tag alpha",
		"publish:major": "npm version major && npm publish",
		"publish:minor": "npm version minor && npm publish",
		"publish:patch": "npm version patch && npm publish",
		"prepack": "echo 'Alpha release - skipping build for now'",
		"postpack": "echo 'Package created successfully'",
		"prepare-publish": "node src/cli/commands/build/utils/prepare-publish.js"
	},
	"keywords": [
		"claude",
		"ai",
		"agent",
		"orchestration",
		"mcp",
		"workflow",
		"automation",
		"swarm",
		"ruv-swarm",
		"github",
		"docker",
		"enterprise",
		"coordination",
		"multi-agent",
		"task-management",
		"cli",
		"tools",
		"alpha",
		"unified-coordination",
		"intrinsic-agents",
		"coordination-hooks",
		"memory-coordination"
	],
	"author": "rUv",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/ruvnet/claude-code-flow.git"
	},
	"bugs": {
		"url": "https://github.com/ruvnet/claude-code-flow/issues"
	},
	"homepage": "https://github.com/ruvnet/claude-code-flow#readme",
	"engines": {
		"node": ">=20.0.0",
		"npm": ">=9.0.0"
	},
	"files": [
		"cli.js",
		"bin/",
		"dist/",
		"src/",
		".claude/",
		"docker-test/",
		"scripts/",
		"README.md",
		"LICENSE",
		"CHANGELOG.md",
		"DOCKER_TEST_REPORT.md"
	],
	"dependencies": {
		"@modelcontextprotocol/sdk": "^1.0.4",
		"@types/better-sqlite3": "^7.6.13",
		"better-sqlite3": "^12.2.0",
		"commander": "^11.1.0",
		"fs-extra": "^11.2.0",
		"lru-cache": "^11.1.0",
		"nanoid": "^5.0.4",
		"p-queue": "^8.1.0",
		"ruv-swarm": "^1.0.14"
	},
	"devDependencies": {
		"@babel/core": "^7.28.0",
		"@babel/preset-env": "^7.28.0",
		"@babel/preset-typescript": "^7.27.1",
		"@types/fs-extra": "^11.0.4",
		"@types/jest": "^29.5.14",
		"@types/node": "^20.19.7",
		"@types/uuid": "^10.0.0",
		"@typescript-eslint/eslint-plugin": "^8.17.0",
		"@typescript-eslint/parser": "^8.17.0",
		"babel-jest": "^29.7.0",
		"detect-secrets": "^1.0.6",
		"eslint": "^9.16.0",
		"glob": "^11.0.3",
		"jest": "^29.7.0",
		"pkg": "^5.8.1",
		"prettier": "^3.1.1",
		"ts-jest": "^29.4.0",
		"tsx": "^4.20.3",
		"typescript": "^5.8.3"
	},
	"pkg": {
		"targets": [
			"node20-linux-x64",
			"node20-macos-x64",
			"node20-win-x64"
		],
		"scripts": "dist/**/*.js",
		"outputPath": "bin",
		"options": [
			"--experimental-specifier-resolution=node"
		]
	},
	"type": "module",
	"publishConfig": {
		"access": "public",
		"registry": "https://registry.npmjs.org/"
	}
}
