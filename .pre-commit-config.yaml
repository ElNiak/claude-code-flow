# .pre-commit-config.yaml â€” Progressive Configuration for Claude Flow
# Balances current reality with future enterprise goals
# Phases with the STEP_BY_STEP_MERGER_IMPLEMENTATION_PLAN.md

# PHASE CONTROL: Set environment variable PRECOMMIT_PHASE=1|2|3
# Phase 1: Gentle cleanup (current state) - DEFAULT
# Phase 2: Structure enforcement (merger weeks 3-4)
# Phase 3: Enterprise grade (merger weeks 5-6)

default_language_version:
  node: system

# Global exclusions
exclude: |
  (?x)^(
    backup/.*|
    memory/backups/.*|
    .*\.backup$|
    .*\.bak$
  )$

repos:
  # =================================================================
  # PHASE 1: ESSENTIAL QUALITY (Always Active)
  # =================================================================
  # Works with current messy structure, doesn't break workflow

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ['--maxkb=5000']  # Generous limit for current state
      - id: check-json
      - id: check-yaml
      - id: check-merge-conflict
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Basic TypeScript/JavaScript quality (warnings OK)
  - repo: https://github.com/biomejs/pre-commit
    rev: v2.1.2
    hooks:
      - id: biome-check
        name: Biome Format + Lint (Phase 1 - Gentle)
        types_or: [javascript, jsx, ts, tsx, json]
        exclude: |
          (?x)^(
            backup/.*|
            memory/backups/.*|
            .*\.backup$|
            .*\.bak$
          )$

  # TypeScript checking (errors only, warnings OK)
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript Check (Errors Only)
        entry: npx tsc --noEmit --skipLibCheck
        language: system
        types: [ts, tsx]
        exclude: |
          (?x)^(
            node_modules/.*|
            backup/.*|
            memory/backups/.*
          )$

  # Conventional commits (already working)
  - repo: local
    hooks:
      - id: commitlint
        name: Conventional Commits
        entry: npx --no-install commitlint --edit $1
        language: system
        stages: [commit-msg]

  # =================================================================
  # SECURITY ESSENTIALS (Always Active)
  # =================================================================
  # Critical security checks that don't break workflow

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect Secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            package-lock\.json|
            backup/.*|
            memory/backups/.*|
            .*\.backup$|
            .*\.bak$
          )$

  # =================================================================
  # DOCKER VALIDATION (Always Active)
  # =================================================================
  # Project has multiple Dockerfiles, validate them

  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        name: Dockerfile Linting
