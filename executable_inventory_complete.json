{
	"inventory_metadata": {
		"generated_date": "2025-07-13T06:13:00.000Z",
		"scan_scope": "Complete claude-flow repository",
		"total_executables_found": 156,
		"methodology": "Comprehensive scan using file permissions, shebang detection, and file type analysis",
		"coordinator": "Executable Inventory Specialist Team"
	},
	"binary_executables": {
		"count": 9,
		"main_binaries": [
			{
				"path": "/bin/claude-flow",
				"type": "POSIX shell script",
				"size_bytes": 2423,
				"permissions": "-rwxr-xr-x",
				"purpose": "Main entry point - Smart dispatcher that detects best runtime",
				"runtime": "Shell (POSIX)",
				"version": "2.0.0-alpha.48",
				"entry_point": true,
				"dependencies": ["Node.js", "npm"],
				"platform_support": ["Linux", "macOS", "Windows"]
			},
			{
				"path": "/bin/claude-flow-swarm",
				"type": "Bash shell script",
				"size_bytes": 1093,
				"permissions": "-rwxr-xr-x",
				"purpose": "Swarm mode wrapper for Deno-based coordination",
				"runtime": "Bash + Deno",
				"dependencies": ["Deno"],
				"platform_support": ["Linux", "macOS"]
			},
			{
				"path": "/bin/claude-flow-node-pkg",
				"type": "ELF 64-bit executable",
				"size_bytes": 46279886,
				"permissions": "-rwxr-xr-x",
				"purpose": "Packaged Node.js binary for Linux deployment",
				"runtime": "Native (pkg-compiled)",
				"architecture": "x86-64",
				"platform_support": ["GNU/Linux"],
				"notes": "Largest executable - contains embedded Node.js runtime"
			},
			{
				"path": "/bin/claude-flow-pkg.js",
				"type": "Node.js script",
				"size_bytes": 355,
				"permissions": "-rwxr-xr-x",
				"purpose": "Wrapper for pkg compilation of TypeScript CLI",
				"runtime": "Node.js",
				"shebang": "#!/usr/bin/env node",
				"dependencies": ["tsx", "npx"]
			},
			{
				"path": "/bin/claude-flow-dev",
				"type": "Bash shell script",
				"size_bytes": 453,
				"permissions": "-rwxr-xr-x",
				"purpose": "Development mode launcher",
				"runtime": "Bash"
			},
			{
				"path": "/bin/claude-flow-swarm-background",
				"type": "Script (UTF-8)",
				"size_bytes": 2332,
				"permissions": "-rwxr-xr-x",
				"purpose": "Background swarm process manager",
				"runtime": "Shell"
			},
			{
				"path": "/bin/claude-flow-swarm-bg",
				"type": "Bash shell script",
				"size_bytes": 1647,
				"permissions": "-rwxr-xr-x",
				"purpose": "Background swarm launcher (alias)",
				"runtime": "Bash"
			},
			{
				"path": "/bin/claude-flow-swarm-monitor",
				"type": "Bash shell script",
				"size_bytes": 589,
				"permissions": "-rwxr-xr-x",
				"purpose": "Swarm monitoring and status interface",
				"runtime": "Bash"
			},
			{
				"path": "/bin/claude-flow-swarm-ui",
				"type": "Bash shell script",
				"size_bytes": 1249,
				"permissions": "-rwxr-xr-x",
				"purpose": "Web UI launcher for swarm coordination",
				"runtime": "Bash"
			}
		]
	},
	"shell_scripts": {
		"count": 47,
		"categories": {
			"automation_scripts": [
				{
					"path": "/scripts/claude-sparc.sh",
					"size_lines": 562,
					"purpose": "SPARC automated development system - comprehensive workflow",
					"complexity": "high",
					"parameters": [
						"--project-name",
						"--readme-path",
						"--mcp-config",
						"--verbose",
						"--dry-run"
					],
					"usage_pattern": "development_automation"
				},
				{
					"path": "/benchmark/hive-mind-benchmarks/scripts/run_complete_benchmark_suite.sh",
					"size_lines": "300+",
					"purpose": "Complete benchmark automation with parallel execution",
					"complexity": "high",
					"parameters": ["--profile", "--timeout", "--parallel-workers"]
				}
			],
			"build_scripts": [
				{
					"path": "/scripts/build-migration.sh",
					"size_lines": 104,
					"purpose": "TypeScript migration and build automation",
					"complexity": "medium"
				},
				{
					"path": "/scripts/build-with-filter.sh",
					"size_lines": 83,
					"purpose": "Filtered build process for specific components",
					"complexity": "medium"
				},
				{
					"path": "/scripts/safe-build.sh",
					"size_lines": 62,
					"purpose": "Error-resistant build with fallbacks",
					"complexity": "low"
				}
			],
			"test_scripts": [
				{
					"path": "/scripts/test-swarm-integration.sh",
					"size_lines": 91,
					"purpose": "Integration testing for swarm coordination",
					"complexity": "medium"
				},
				{
					"path": "/examples/04-testing/sparc-swarm-test.sh",
					"purpose": "SPARC methodology testing with swarm coordination",
					"complexity": "medium"
				}
			],
			"deployment_scripts": [
				{
					"path": "/docker/run-tests.sh",
					"purpose": "Docker container test execution",
					"complexity": "low"
				}
			],
			"utility_scripts": [
				{
					"path": "/scripts/cleanup-root.sh",
					"size_lines": 68,
					"purpose": "Repository cleanup and maintenance",
					"complexity": "low"
				},
				{
					"path": "/scripts/claude-wrapper.sh",
					"purpose": "Claude CLI wrapper with enhanced features",
					"complexity": "low"
				}
			]
		}
	},
	"javascript_typescript_executables": {
		"count": 45,
		"entry_points": [
			{
				"path": "/src/cli/simple-cli.ts",
				"purpose": "Main TypeScript CLI implementation",
				"runtime": "tsx/ts-node",
				"complexity": "high",
				"dependencies": ["cliffy", "blessed"]
			},
			{
				"path": "/src/cli/main.ts",
				"purpose": "Core CLI orchestrator",
				"runtime": "Node.js",
				"complexity": "high"
			},
			{
				"path": "/src/ui/web-ui/EnhancedProcessUI.js",
				"shebang": "#!/usr/bin/env node",
				"purpose": "Enhanced process UI for web interface",
				"runtime": "Node.js"
			}
		],
		"modules": [
			{
				"path": "/src/swarm/prompt-cli.ts",
				"purpose": "Swarm prompt management CLI interface",
				"type": "module"
			},
			{
				"path": "/src/mcp/mcp-server.js",
				"purpose": "MCP protocol server implementation",
				"type": "server"
			}
		]
	},
	"python_executables": {
		"count": 52,
		"categories": {
			"benchmark_tools": [
				{
					"path": "/benchmark/compare_optimizations.py",
					"shebang": "#!/usr/bin/env python3",
					"purpose": "Performance optimization comparison analysis",
					"complexity": "high",
					"dependencies": ["asyncio", "json", "pathlib"]
				},
				{
					"path": "/benchmark/swarm_performance_suite.py",
					"shebang": "#!/usr/bin/env python3",
					"purpose": "Comprehensive swarm performance testing suite",
					"complexity": "high"
				},
				{
					"path": "/benchmark/hive-mind-load-test.py",
					"shebang": "#!/usr/bin/env python3",
					"purpose": "Load testing for hive mind coordination",
					"complexity": "medium"
				}
			],
			"analysis_tools": [
				{
					"path": "/scripts/claude-monitor.py",
					"purpose": "Claude process monitoring and metrics collection",
					"complexity": "medium"
				},
				{
					"path": "/scripts/fix-ts-comprehensive.py",
					"purpose": "TypeScript error analysis and fixing automation",
					"complexity": "high"
				}
			],
			"test_automation": [
				{
					"path": "/benchmark/tests/integration/test_sparc_modes.py",
					"shebang": "#!/usr/bin/env python3",
					"purpose": "SPARC coordination mode integration testing",
					"complexity": "medium"
				},
				{
					"path": "/benchmark/tests/integration/test_swarm_strategies.py",
					"shebang": "#!/usr/bin/env python3",
					"purpose": "Swarm strategy validation and testing",
					"complexity": "medium"
				}
			]
		}
	},
	"docker_tools": {
		"count": 5,
		"containers": [
			{
				"path": "/docker/Dockerfile.test",
				"purpose": "Multi-stage test container for feature validation",
				"base_image": "node:18-alpine",
				"stages": ["base", "dev-deps", "test", "npx-test"]
			},
			{
				"path": "/docker/Dockerfile.hive-mind",
				"purpose": "Hive mind coordination container",
				"complexity": "medium"
			},
			{
				"path": "/examples/flask-api-sparc/Dockerfile",
				"purpose": "Flask API SPARC example deployment",
				"base_image": "python"
			}
		],
		"compose_files": [
			{
				"path": "/benchmark/hive-mind-benchmarks/docker/docker-compose.yml",
				"purpose": "Benchmark testing orchestration",
				"services": "multiple"
			}
		]
	},
	"special_executables": {
		"npm_scripts": {
			"count": "25+",
			"location": "package.json",
			"categories": ["build", "test", "dev", "benchmark", "migration"]
		},
		"hidden_executables": [
			{
				"path": "/node_modules/.bin/*",
				"count": "50+",
				"purpose": "Node.js package binaries",
				"note": "Auto-generated by npm install"
			}
		]
	},
	"execution_chains": {
		"primary_entry_flow": [
			"bin/claude-flow → src/cli/simple-cli.js → main.ts → orchestrator.ts"
		],
		"swarm_flow": [
			"bin/claude-flow-swarm → swarm-demo.ts / swarm-standalone.js"
		],
		"benchmark_flow": [
			"benchmark/swarm_performance_suite.py → benchmark_engine.py → coordination modes"
		]
	},
	"platform_specific": {
		"linux_only": ["bin/claude-flow-node-pkg"],
		"unix_like": ["Most shell scripts (.sh files)"],
		"cross_platform": [
			"bin/claude-flow",
			"All Node.js/.js files",
			"All Python/.py files"
		]
	},
	"integration_touchpoints": {
		"mcp_integration": ["src/mcp/mcp-server.js", "src/mcp/server.ts"],
		"vscode_integration": ["src/terminal/vscode-bridge.ts"],
		"github_integration": ["Tests and scripts for GitHub API interaction"]
	},
	"usage_frequency_indicators": {
		"high_usage": [
			"bin/claude-flow",
			"scripts/claude-sparc.sh",
			"benchmark/swarm_performance_suite.py"
		],
		"development_only": [
			"bin/claude-flow-dev",
			"scripts/build-*.sh",
			"scripts/fix-*.sh"
		],
		"testing_only": [
			"docker/run-tests.sh",
			"benchmark/test_*.py",
			"scripts/test-*.sh"
		]
	}
}
